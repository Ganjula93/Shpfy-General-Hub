{{ 'section-custom-hero.css' | asset_url | stylesheet_tag }}

{%- liquid
  assign hero_full_height = section.settings.hero_full_height
  assign hero_text_align = section.settings.text_alignment
  assign hero_overlay_opacity = section.settings.overlay_opacity | divided_by: 100.0

  assign logo_image = section.settings.logo_image
  assign logo_link = section.settings.logo_link | default: routes.root_url
  assign logo_max_width = section.settings.logo_max_width

  assign hero_image = section.settings.hero_image

  assign decorative_image = section.settings.decorative_image
  assign decorative_image_max_width = section.settings.decorative_image_max_width

  assign heading = section.settings.heading
  assign subheading = section.settings.subheading
  assign button_label = section.settings.button_label
  assign button_link = section.settings.button_link

  assign text_animation_class = "animate-on-scroll"
-%}

<div id="shopify-section-{{ section.id }}"
     class="custom-hero-section
            {% if hero_full_height %} custom-hero--full-height{% endif %}
            {% if hero_image == blank %} custom-hero--no-image{% endif %}"
     style="--hero-overlay-opacity: {{ hero_overlay_opacity }};
            {% if hero_image %}background-image: url('{{ hero_image | image_url: width: 2000, height: 1200, crop: 'center' }}');{% endif %}"
     data-section-id="{{ section.id }}"
     data-section-type="custom-hero-section">

  {% if logo_image != blank %}
    <div class="custom-hero__logo-wrapper">
      <a href="{{ logo_link }}" class="custom-hero__logo-link">
        <img src="{{ logo_image | image_url: width: logo_max_width }}"
             alt="{{ logo_image.alt | default: shop.name | escape }}"
             class="custom-hero__logo-image"
             width="{{ logo_max_width }}"
             height="auto"
             loading="eager">
      </a>
    </div>
  {% endif %}

  <div class="custom-hero__overlay"></div>

  <div class="page-width custom-hero__content-wrapper custom-hero__content--{{ hero_text_align }}">
    <div class="custom-hero__content">
      {% if decorative_image != blank %}
        <img src="{{ decorative_image | image_url: width: decorative_image_max_width }}"
             alt="{{ decorative_image.alt | default: 'Decorative element' | escape }}"
             class="custom-hero__decorative-image {{ text_animation_class }}"
             style="max-width: {{ decorative_image_max_width }}px;"
             width="{{ decorative_image_max_width }}"
             height="auto"
             loading="lazy">
      {% endif %}

      {% if heading != blank %}
        <h1 class="custom-hero__heading {{ text_animation_class }}">{{ heading | escape }}</h1>
      {% endif %}
      {% if subheading != blank %}
        <div class="custom-hero__subheading rte {{ text_animation_class }}">{{ subheading }}</div>
      {% endif %}
      {% if button_label != blank and button_link != blank %}
        <a href="{{ button_link }}" class="btn custom-hero__button {{ text_animation_class }}">
          {{ button_label | escape }}
        </a>
      {% else %}
        {% comment %} Shopify Admin Hint: Show a placeholder if button fields are not filled in editor {% endcomment %}
        {% if request.design_mode %}
          <div class="custom-hero__button--placeholder">
            <p><em>Button will appear here once "Button Label" and "Button Link" are set.</em></p>
          </div>
        {% endif %}
      {% endif %}
    </div>
  </div>
</div>

{% comment %}
  JavaScript for animations
{% endcomment %}
<script>
document.addEventListener('DOMContentLoaded', function() {
  if (!('IntersectionObserver' in window)) {
    const elementsToAnimateFallback = document.querySelectorAll(
      '#shopify-section-{{ section.id }} .animate-on-scroll'
    );
    elementsToAnimateFallback.forEach(el => {
      if (el) {
        el.classList.add('is-visible');
      }
    });
    return;
  }

  const sectionId = '{{ section.id }}';
  const sectionElement = document.getElementById('shopify-section-' + sectionId);

  if (!sectionElement) {
    return;
  }

  const elementsToAnimate = sectionElement.querySelectorAll('.animate-on-scroll');

  if (elementsToAnimate.length === 0) {
    return;
  }

  const observerOptions = {
    root: null,
    rootMargin: '0px 0px -50px 0px',
    threshold: 0.1
  };

  const observerCallback = (entries, observer) => {
    entries.forEach((entry, index) => {
      if (entry.isIntersecting) {
        const target = entry.target;
        let delay = 0;

        // Stagger delays for hero elements
        if (target.classList.contains('custom-hero__heading')) {
            delay = 100; // Heading after decorative image (decorative image gets 0ms)
        } else if (target.classList.contains('custom-hero__subheading')) {
          delay = 250; // Subheading after heading
        } else if (target.classList.contains('custom-hero__button')) {
          delay = 400; // Button after subheading
        }
        // Decorative image gets 0ms (default from CSS for .animate-on-scroll)

        target.style.transitionDelay = `${delay}ms`;
        target.classList.add('is-visible');
        observer.unobserve(target);
      }
    });
  };

  const animationObserver = new IntersectionObserver(observerCallback, observerOptions);
  elementsToAnimate.forEach(el => animationObserver.observe(el));
});
</script>

{% schema %}
{
  "name": "Custom Hero Section",
  "tag": "section",
  "class": "section-custom-hero",
  "settings": [
    {
      "type": "header",
      "content": "Layout & Background"
    },
    {
      "type": "image_picker",
      "id": "hero_image",
      "label": "Background Image",
      "info": "Recommended size: 2000x1000px or larger for best quality."
    },
    {
      "type": "checkbox",
      "id": "hero_full_height",
      "label": "Make section full screen height",
      "default": true
    },
    {
      "type": "range",
      "id": "overlay_opacity",
      "min": 0,
      "max": 90,
      "step": 5,
      "unit": "%",
      "label": "Image overlay opacity",
      "default": 30,
      "info": "Set to 0 for no overlay. Helps with text readability."
    },
    {
      "type": "header",
      "content": "Logo (Optional)"
    },
    {
      "type": "image_picker",
      "id": "logo_image",
      "label": "Logo Image"
    },
    {
      "type": "url",
      "id": "logo_link",
      "label": "Logo Link",
      "info": "Defaults to homepage if left blank."
    },
    {
      "type": "range",
      "id": "logo_max_width",
      "min": 50,
      "max": 400, /* Increased max range */
      "step": 10,
      "unit": "px",
      "label": "Logo Max Width",
      "default": 180 /* Increased by 50% from 120 */
    },
    {
      "type": "header",
      "content": "Content"
    },
    {
      "type": "image_picker",
      "id": "decorative_image",
      "label": "Decorative Image (Above Heading)"
    },
    {
      "type": "range",
      "id": "decorative_image_max_width",
      "min": 30,
      "max": 350, /* Increased max range */
      "step": 5,
      "unit": "px",
      "label": "Decorative Image Max Width",
      "default": 150 /* Increased by 50% from 100 */
    },
    {
      "type": "text",
      "id": "heading",
      "label": "Heading",
      "default": "Boho Bags for the Wild & Woven Soul"
    },
    {
      "type": "richtext",
      "id": "subheading",
      "label": "Subheading",
      "default": "<p>Accessories that carry more than just your essentials</p>"
    },
    {
      "type": "text",
      "id": "button_label",
      "label": "Button Label",
      "default": "Shop the Collection"
    },
    {
      "type": "url",
      "id": "button_link",
      "label": "Button Link"
    },
    {
      "type": "select",
      "id": "text_alignment",
      "label": "Text Alignment",
      "options": [
        { "value": "left", "label": "Left" },
        { "value": "center", "label": "Center" },
        { "value": "right", "label": "Right" }
      ],
      "default": "center"
    }
  ],
  "presets": [
    {
      "name": "Custom Hero Section"
    }
  ]
}
{% endschema %}
