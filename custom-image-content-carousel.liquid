{% comment %}
  Shopify Custom Section: Content Carousel

  Features:
  - Two-column layout (image on one side, content on the other).
  - Customizable image position (left or right) and mobile layout order.
  - Full-height image with optional color overlay and opacity (scoped per section).
  - Optional padding for the entire section on mobile.
  - Heading uses Lustria Regular font. Subtext and product text use a customizable font.
  - Font sizes for all text elements are customizable for desktop and mobile.
  - SwiperJS product carousel from a selected collection with dynamic pagination.
  - Customizable section background color (scoped per section).
  - CSS custom properties are scoped to prevent overrides when using multiple instances.

  Make sure SwiperJS CSS and JS are loaded in your theme's assets:
  - swiper-bundle.min.css
  - swiper-bundle.min.js
  - Lustria-Regular.ttf (ensure this font file is in your assets folder)
{% endcomment %}

{{ 'swiper-bundle.min.css' | asset_url | stylesheet_tag }}

<style>
  @font-face {
    font-family: 'Lustria Regular';
    src: url('{{ "Lustria-Regular.ttf" | asset_url }}') format('truetype');
    font-weight: normal;
    font-style: normal;
    font-display: swap;
  }

  #CustomSection-{{ section.id }} {
    background-color: var(--section-bg-color-{{ section.id }});
    {% if section.settings.enable_mobile_section_padding_top %}
      padding-top: {{ section.settings.mobile_section_padding_top }}px;
    {% else %}
      padding-top: 0;
    {% endif %}
  }

  @media (min-width: 769px) {
    #CustomSection-{{ section.id }} {
      padding-top: 0; /* Reset section padding for desktop */
    }
  }

  .custom-section-image-text-swiper {
    display: flex;
    flex-wrap: wrap;
    width: 100%;
    min-height: 70vh;
    overflow: hidden;
  }

  .custom-section-image-text-swiper__col {
    width: 100%;
  }

  /* Mobile Layout Order */
  {% if section.settings.mobile_layout_order == 'image_first' %}
    #CustomSection-{{ section.id }} .custom-section-image-text-swiper__col--image-container { order: 1; }
    #CustomSection-{{ section.id }} .custom-section-image-text-swiper__col--content { order: 2; }
  {% else %}
    #CustomSection-{{ section.id }} .custom-section-image-text-swiper__col--image-container { order: 2; }
    #CustomSection-{{ section.id }} .custom-section-image-text-swiper__col--content { order: 1; }
  {% endif %}

  .custom-section-image-text-swiper__col--image-container {
    position: relative;
    min-height: 300px;
    display: flex; /* Changed from flex to allow image-content-wrapper to define height */
    flex-direction: column; /* This helps if you want to stack things inside, but for just the wrapper, it might not be strictly needed */
    /* padding-top is now handled by the main section div for mobile */
  }

  .image-content-wrapper { /* Inner div for background image and overlay */
    position: relative;
    width: 100%;
    height: 100%; /* Ensure it takes full height of its parent if parent has defined height */
    flex-grow: 1; /* Allow it to fill available space if parent is flex */
    background-size: cover;
    background-position: center;
    min-height: 300px; /* Ensure this wrapper has a minimum height, especially if parent's height is not fixed */
    background-color: transparent;
  }

  @media (min-width: 769px) { /* Desktop layout overrides */
    .custom-section-image-text-swiper__col {
      width: 50%;
    }
    .custom-section-image-text-swiper__col--image-container {
      height: auto; /* Let content or min-height define height */
      min-height: auto; /* Reset if not needed, or match section min-height if full height image desired */
    }
    .image-content-wrapper {
        min-height: 70vh; /* Example: make image wrapper take full section height on desktop if desired */
    }
    #CustomSection-{{ section.id }}.custom-section-image-text-swiper--image-left .custom-section-image-text-swiper__col--image-container { order: 1 !important; }
    #CustomSection-{{ section.id }}.custom-section-image-text-swiper--image-left .custom-section-image-text-swiper__col--content { order: 2 !important; }
    #CustomSection-{{ section.id }}.custom-section-image-text-swiper--image-right .custom-section-image-text-swiper__col--image-container { order: 2 !important; }
    #CustomSection-{{ section.id }}.custom-section-image-text-swiper--image-right .custom-section-image-text-swiper__col--content { order: 1 !important; }
  }

  /* Image Overlay - Scoped to section ID, applied to the inner wrapper */
  #CustomSection-{{ section.id }} .image-content-wrapper::before {
    content: '';
    position: absolute;
    top: 0;
    right: 0;
    bottom: 0;
    left: 0;
    background-color: {{ section.settings.image_overlay_color }};
    opacity: {{ section.settings.image_overlay_opacity }};
    z-index: 1;
    pointer-events: none;
  }

  .custom-section-image-text-swiper__col--image-container .visually-hidden-image {
    display: block;
    width: 1px;
    height: 1px;
    opacity: 0.01;
    position: absolute;
    top: 0; /* Positioned relative to .image-content-wrapper or .custom-section-image-text-swiper__col--image-container */
    left: 0;
    z-index: -1;
  }

  .custom-section-image-text-swiper__col--content {
    display: flex;
    flex-direction: column;
    justify-content: center;
    padding: 30px 20px;
    box-sizing: border-box;
  }
   @media (min-width: 769px) {
    .custom-section-image-text-swiper__col--content {
      padding: 40px 50px;
    }
  }

  #CustomSection-{{ section.id }} .custom-section-image-text-swiper__heading {
    font-size: {{ section.settings.heading_font_size_mobile }}em;
    margin-bottom: 4px;
    line-height: 1.2;
    color: #625F49;
  }

  #CustomSection-{{ section.id }} .custom-section-image-text-swiper__subtext {
    font-size: {{ section.settings.subtext_font_size_mobile }}em;
    margin-bottom: 30px;
    line-height: 1.5;
    font-family: var(--font-body-family-{{ section.id }});
    font-weight: var(--font-body-weight-{{ section.id }});
    font-style: var(--font-body-style-{{ section.id }});
  }

  @media (min-width: 769px) {
    #CustomSection-{{ section.id }} .custom-section-image-text-swiper__heading {
      font-size: {{ section.settings.heading_font_size_desktop }}em;
    }
    #CustomSection-{{ section.id }} .custom-section-image-text-swiper__subtext {
      font-size: {{ section.settings.subtext_font_size_desktop }}em;
    }
  }

  .custom-section-image-text-swiper .swiper {
    width: 100%;
    padding-bottom: 40px;
  }

  .custom-section-image-text-swiper .swiper-slide {
    text-align: center;
    background: transparent;
    display: flex;
    flex-direction: column;
    justify-content: flex-start;
    align-items: center;
    width: auto;
    box-sizing: border-box;
    padding: 0;
  }

  .custom-section-image-text-swiper .swiper-slide a {
    text-decoration: none;
    display: block;
  }

  .custom-section-image-text-swiper .swiper-slide img {
    display: block;
    width: 100%;
    max-width: 280px;
    height: auto;
    object-fit: contain;
    margin-bottom: 10px;
  }

  #CustomSection-{{ section.id }} .product-title {
    font-size: {{ section.settings.product_title_font_size_mobile }}em;
    margin-bottom: 4px;
    color: #212529;
    line-height: 1.3;
    font-family: var(--font-body-family-{{ section.id }});
    font-weight: var(--font-body-weight-{{ section.id }});
    font-style: var(--font-body-style-{{ section.id }});
  }

  #CustomSection-{{ section.id }} .product-price {
    font-size: {{ section.settings.product_price_font_size_mobile }}em;
    color: #495057;
    font-family: var(--font-body-family-{{ section.id }});
    font-weight: var(--font-body-weight-{{ section.id }});
    font-style: var(--font-body-style-{{ section.id }});
  }

  @media (min-width: 769px) {
    #CustomSection-{{ section.id }} .product-title {
      font-size: {{ section.settings.product_title_font_size_desktop }}em;
    }
    #CustomSection-{{ section.id }} .product-price {
      font-size: {{ section.settings.product_price_font_size_desktop }}em;
    }
  }

  .swiper-pagination-bullet {
    background-color: #000000;
    opacity: 0.5;
    width: 8px;
    height: 8px;
    transition: opacity 0.3s, background-color 0.3s;
  }
  .swiper-pagination-bullet-active,
  .swiper-pagination-bullet-active-main {
    opacity: 1;
    background-color: #000000;
  }

  .swiper-button-next,
  .swiper-button-prev {
    color: #000000;
  }
   .swiper-button-next::after,
   .swiper-button-prev::after {
    font-size: 24px;
    font-weight: bold;
  }
</style>

{%- liquid
  assign image = section.settings.image
  assign heading_text = section.settings.heading
  assign subtext_content = section.settings.subtext
  assign collection = section.settings.collection
  assign products_to_show = section.settings.products_to_show | default: 8

  assign font_body = section.settings.font_body
  assign section_bg_color = section.settings.section_background_color
-%}

<div
  id="CustomSection-{{ section.id }}"
  class="custom-section-image-text-swiper custom-section-image-text-swiper--{{ section.settings.image_position }}"
  data-section-id="{{ section.id }}"
  data-section-type="custom-image-text-swiper"
  style="
    --font-body-family-{{ section.id }}: {{ font_body.family }}, {{ font_body.fallback_families }};
    --font-body-weight-{{ section.id }}: {{ font_body.weight }};
    --font-body-style-{{ section.id }}: {{ font_body.style }};
    --section-bg-color-{{ section.id }}: {{ section_bg_color }};
  "
>
  <div class="custom-section-image-text-swiper__col custom-section-image-text-swiper__col--image-container">
    <div class="image-content-wrapper"
      {% if image != blank %}
        style="background-image: url('{{ image | image_url: width: image.width }}');"
      {% else %}
        style="display:flex; align-items:center; justify-content:center; background-color: #f0f0f0;"
      {% endif %}
    >
      {% if image == blank %}
        {{ 'image' | placeholder_svg_tag: 'placeholder-svg placeholder-svg--image' }}
      {% endif %}
    </div>
    {% if image != blank %}
      <img src="{{ image | image_url: width: 100 }}"
            class="visually-hidden-image"
            srcset="{{ image | image_url: width: 400 }} 400w,
                    {{ image | image_url: width: 800 }} 800w,
                    {{ image | image_url: width: 1200 }} 1200w,
                    {{ image | image_url: width: 1600 }} 1600w,
                    {{ image | image_url: width: 2000 }} 2000w"
            sizes="(max-width: 768px) 100vw, 50vw"
            alt="{{ image.alt | escape }}"
            loading="lazy"
            width="{{ image.width }}"
            height="{{ image.height }}">
    {% endif %}
  </div>

  <div class="custom-section-image-text-swiper__col custom-section-image-text-swiper__col--content">
    {% if heading_text != blank %}
      <h2 class="custom-section-image-text-swiper__heading">{{ heading_text | escape }}</h2>
    {% endif %}
    {% if subtext_content != blank %}
      <div class="custom-section-image-text-swiper__subtext">{{ subtext_content }}</div>
    {% endif %}

    {% if collection != blank and collection.products_count > 0 %}
      <div class="swiper swiper-{{ section.id }}">
        <div class="swiper-wrapper">
          {% for product in collection.products limit: products_to_show %}
            <div class="swiper-slide">
              <a href="{{ product.url | within: collection }}" aria-label="{{ product.title | escape }}">
                {% if product.featured_image %}
                  <img
                    src="{{ product.featured_image | image_url: width: 560 }}"
                    alt="{{ product.featured_image.alt | default: product.title | escape }}"
                    loading="lazy"
                    width="280"
                    height="{{ 280 | divided_by: product.featured_image.aspect_ratio | round }}"
                  >
                {% else %}
                  {{ 'product-1' | placeholder_svg_tag: 'placeholder-svg' }}
                {% endif %}
                <div class="product-title">{{ product.title }}</div>
                <div class="product-price">{{ product.price | money }}</div>
              </a>
            </div>
          {% endfor %}
        </div>
        {% if section.settings.show_swiper_pagination %}
          <div class="swiper-pagination swiper-pagination-{{ section.id }}"></div>
        {% endif %}
        {% if section.settings.show_swiper_navigation %}
          <div class="swiper-button-next swiper-button-next-{{ section.id }}"></div>
          <div class="swiper-button-prev swiper-button-prev-{{ section.id }}"></div>
        {% endif %}
      </div>
    {% elsif collection.products_count == 0 and collection != blank %}
        <p>{{ 'sections.featured_collection.no_products' | t }}</p>
    {% endif %}
  </div>
</div>

<script src="{{ 'swiper-bundle.min.js' | asset_url }}" defer="defer"></script>
<script>
  function initSwiperForSection(sectionElement) {
    if (!sectionElement) return;

    const sectionId = sectionElement.dataset.sectionId;
    const swiperContainer = sectionElement.querySelector('.swiper-' + sectionId);
    const paginationEl = sectionElement.querySelector('.swiper-pagination-' + sectionId);
    const nextEl = sectionElement.querySelector('.swiper-button-next-' + sectionId);
    const prevEl = sectionElement.querySelector('.swiper-button-prev-' + sectionId);

    const slidesPerViewMobile = parseFloat(sectionElement.querySelector('.swiper').dataset.slidesPerViewMobile || '{{ section.settings.slides_per_view_mobile }}');
    const slidesPerViewDesktop = parseFloat(sectionElement.querySelector('.swiper').dataset.slidesPerViewDesktop || '{{ section.settings.slides_per_view_desktop }}');
    const spaceBetweenSlides = parseInt(sectionElement.querySelector('.swiper').dataset.spaceBetweenSlides || '{{ section.settings.space_between_slides }}', 10);
    const spaceBetweenSlidesDesktop = parseInt(sectionElement.querySelector('.swiper').dataset.spaceBetweenSlidesDesktop || '{{ section.settings.space_between_slides_desktop }}', 10);
    const loopSlides = sectionElement.querySelector('.swiper').dataset.loopSlides === 'true' || {{ section.settings.loop_slides }};
    const showPagination = sectionElement.querySelector('.swiper').dataset.showPagination === 'true' || {{ section.settings.show_swiper_pagination }};
    const showNavigation = sectionElement.querySelector('.swiper').dataset.showNavigation === 'true' || {{ section.settings.show_swiper_navigation }};

    if (swiperContainer && typeof Swiper !== 'undefined') {
      if (swiperContainer.swiper) {
        swiperContainer.swiper.destroy(true, true);
      }
      const swiperInstance = new Swiper(swiperContainer, {
        slidesPerView: slidesPerViewMobile,
        spaceBetween: spaceBetweenSlides,
        grabCursor: true,
        loop: loopSlides,
        observer: true,
        observeParents: true,
        pagination: showPagination && paginationEl ? {
          el: paginationEl,
          clickable: true,
          dynamicBullets: true,
        } : false,
        navigation: showNavigation && nextEl && prevEl ? {
          nextEl: nextEl,
          prevEl: prevEl,
        } : false,
        breakpoints: {
          768: {
            slidesPerView: slidesPerViewDesktop,
            spaceBetween: spaceBetweenSlidesDesktop
          }
        },
        on: {
          init: function () {
            requestAnimationFrame(() => {
              this.update();
            });
          }
        }
      });
    } else if (typeof Swiper === 'undefined') {
      console.warn('Swiper JS not loaded or not available when trying to initialize for section ' + sectionId);
    }
  }

  document.addEventListener('DOMContentLoaded', function () {
    document.querySelectorAll('[data-section-type="custom-image-text-swiper"]').forEach(function(sectionElement) {
      const swiperContainer = sectionElement.querySelector('.swiper');
      if (swiperContainer) {
          swiperContainer.dataset.slidesPerViewMobile = '{{ section.settings.slides_per_view_mobile }}';
          swiperContainer.dataset.slidesPerViewDesktop = '{{ section.settings.slides_per_view_desktop }}';
          swiperContainer.dataset.spaceBetweenSlides = '{{ section.settings.space_between_slides }}';
          swiperContainer.dataset.spaceBetweenSlidesDesktop = '{{ section.settings.space_between_slides_desktop }}';
          swiperContainer.dataset.loopSlides = '{{ section.settings.loop_slides }}';
          swiperContainer.dataset.showPagination = '{{ section.settings.show_swiper_pagination }}';
          swiperContainer.dataset.showNavigation = '{{ section.settings.show_swiper_navigation }}';
      }
      initSwiperForSection(sectionElement);
    });
  });

  document.addEventListener('shopify:section:load', function(event) {
    const sectionElement = event.target;
    if (sectionElement && sectionElement.dataset && sectionElement.dataset.sectionType === 'custom-image-text-swiper') {
        const swiperContainer = sectionElement.querySelector('.swiper');
        if (swiperContainer) {
            swiperContainer.dataset.slidesPerViewMobile = event.detail.section.settings.slides_per_view_mobile;
            swiperContainer.dataset.slidesPerViewDesktop = event.detail.section.settings.slides_per_view_desktop;
            swiperContainer.dataset.spaceBetweenSlides = event.detail.section.settings.space_between_slides;
            swiperContainer.dataset.spaceBetweenSlidesDesktop = event.detail.section.settings.space_between_slides_desktop;
            swiperContainer.dataset.loopSlides = event.detail.section.settings.loop_slides;
            swiperContainer.dataset.showPagination = event.detail.section.settings.show_swiper_pagination;
            swiperContainer.dataset.showNavigation = event.detail.section.settings.show_swiper_navigation;
        }
      initSwiperForSection(sectionElement);
    }
  });

  document.addEventListener('shopify:section:unload', function(event) {
    const sectionElement = event.target;
     if (sectionElement && sectionElement.dataset && sectionElement.dataset.sectionType === 'custom-image-text-swiper') {
      const swiperContainer = sectionElement.querySelector('.swiper-' + sectionElement.dataset.sectionId);
      if (swiperContainer && swiperContainer.swiper) {
        swiperContainer.swiper.destroy(true, true);
      }
    }
  });
</script>

{% schema %}
{
  "name": "content-carousel",
  "tag": "section",
  "class": "section-custom-image-text-swiper",
  "settings": [
    {
      "type": "header",
      "content": "Layout & Background"
    },
    {
      "type": "select",
      "id": "image_position",
      "label": "Image Position (Desktop)",
      "options": [
        { "value": "image-left", "label": "Image Left, Content Right" },
        { "value": "image-right", "label": "Image Right, Content Left" }
      ],
      "default": "image-left"
    },
    {
      "type": "select",
      "id": "mobile_layout_order",
      "label": "Mobile Layout Order",
      "options": [
        { "value": "content_first", "label": "Content First, Then Image" },
        { "value": "image_first", "label": "Image First, Then Content" }
      ],
      "default": "content_first",
      "info": "Determines stacking order on mobile screens."
    },
    {
      "type": "color",
      "id": "section_background_color",
      "label": "Section Background Color",
      "default": "#EEE9DA"
    },
    {
      "type": "checkbox",
      "id": "enable_mobile_section_padding_top",
      "label": "Enable Padding Above Section (Mobile)",
      "default": false,
      "info": "Adds space above the entire section on mobile devices only."
    },
    {
      "type": "range",
      "id": "mobile_section_padding_top",
      "min": 0,
      "max": 100,
      "step": 5,
      "unit": "px",
      "label": "Section Top Padding (Mobile)",
      "default": 20,
      "info": "Only applies if the toggle above is checked."
    },
    {
      "type": "header",
      "content": "Image Column"
    },
    {
      "type": "image_picker",
      "id": "image",
      "label": "Image"
    },
    {
      "type": "color",
      "id": "image_overlay_color",
      "label": "Image Overlay Color",
      "default": "#000000"
    },
    {
      "type": "range",
      "id": "image_overlay_opacity",
      "min": 0,
      "max": 1,
      "step": 0.1,
      "label": "Image Overlay Opacity",
      "default": 0.3
    },
    {
      "type": "header",
      "content": "Content Column Typography"
    },
    {
      "type": "font_picker",
      "id": "font_body",
      "label": "Body & Product Text Font",
      "info": "Heading font is Lustria Regular (loaded from assets).",
      "default": "sans-serif"
    },
    {
      "type": "text",
      "id": "heading",
      "label": "Heading Text",
      "default": "Your Heading Here"
    },
    {
      "type": "range",
      "id": "heading_font_size_desktop",
      "min": 2.0,
      "max": 8.0,
      "step": 0.1,
      "unit": "em",
      "label": "Heading Font Size (Desktop)",
      "default": 5.0
    },
    {
      "type": "range",
      "id": "heading_font_size_mobile",
      "min": 1.5,
      "max": 6.0,
      "step": 0.1,
      "unit": "em",
      "label": "Heading Font Size (Mobile)",
      "default": 3.0
    },
    {
      "type": "richtext",
      "id": "subtext",
      "label": "Subtext Content",
      "default": "<p>Use this space to tell a story or describe your products.</p>"
    },
    {
      "type": "range",
      "id": "subtext_font_size_desktop",
      "min": 0.8,
      "max": 3.0,
      "step": 0.1,
      "unit": "em",
      "label": "Subtext Font Size (Desktop)",
      "default": 1.6
    },
    {
      "type": "range",
      "id": "subtext_font_size_mobile",
      "min": 0.7,
      "max": 2.5,
      "step": 0.1,
      "unit": "em",
      "label": "Subtext Font Size (Mobile)",
      "default": 1.0
    },
    {
      "type": "header",
      "content": "Product Carousel Typography"
    },
    {
      "type": "range",
      "id": "product_title_font_size_desktop",
      "min": 0.7,
      "max": 2.0,
      "step": 0.1,
      "unit": "em",
      "label": "Product Title Font Size (Desktop)",
      "default": 1.0
    },
    {
      "type": "range",
      "id": "product_title_font_size_mobile",
      "min": 0.6,
      "max": 1.5,
      "step": 0.1,
      "unit": "em",
      "label": "Product Title Font Size (Mobile)",
      "default": 0.9
    },
    {
      "type": "range",
      "id": "product_price_font_size_desktop",
      "min": 0.7,
      "max": 2.0,
      "step": 0.1,
      "unit": "em",
      "label": "Product Price Font Size (Desktop)",
      "default": 1.0
    },
    {
      "type": "range",
      "id": "product_price_font_size_mobile",
      "min": 0.6,
      "max": 1.5,
      "step": 0.1,
      "unit": "em",
      "label": "Product Price Font Size (Mobile)",
      "default": 0.9
    },
    {
      "type": "header",
      "content": "Product Carousel Functionality"
    },
    {
      "type": "collection",
      "id": "collection",
      "label": "Collection"
    },
    {
      "type": "range",
      "id": "products_to_show",
      "min": 3,
      "max": 20,
      "step": 1,
      "label": "Max Products to Show in Carousel",
      "default": 8
    },
    {
      "type": "number",
      "id": "slides_per_view_mobile",
      "label": "Slides per view (Mobile)",
      "info": "e.g., 1.3 or 1.5 to show part of the next slide for a 'teasing' effect. Default is 1.",
      "default": 1
    },
    {
      "type": "number",
      "id": "slides_per_view_desktop",
      "label": "Slides per view (Desktop)",
      "info": "IMPORTANT: To show 3 full slides & tease the 4th (like reference), enter 3.3 or 3.5. Default is 3.",
      "default": 3
    },
    {
      "type": "range",
      "id": "space_between_slides",
      "min": 0,
      "max": 28,
      "step": 1,
      "unit": "px",
      "label": "Space between slides (Mobile)",
      "default": 15
    },
    {
      "type": "range",
      "id": "space_between_slides_desktop",
      "min": 0,
      "max": 28,
      "step": 1,
      "unit": "px",
      "label": "Space between slides (Desktop)",
      "default": 20
    },
    {
      "type": "checkbox",
      "id": "loop_slides",
      "label": "Loop slides",
      "info": "Enable for continuous scrolling and 'teasing' effect with few items.",
      "default": true
    },
    {
      "type": "checkbox",
      "id": "show_swiper_navigation",
      "label": "Show navigation arrows",
      "default": false
    },
    {
      "type": "checkbox",
      "id": "show_swiper_pagination",
      "label": "Show pagination dots",
      "default": true
    }
  ],
  "presets": [
    {
      "name": "content-carousel",
      "settings": {
        "heading": "Treasures with Soul",
        "subtext": "<p>Everyday treasures, made with soul and meant to outlast any season.</p>",
        "image_overlay_opacity": 0.3,
        "image_overlay_color": "#000000",
        "section_background_color": "#EEE9DA",
        "font_body": "sans-serif",
        "heading_font_size_desktop": 5.0,
        "heading_font_size_mobile": 3.0,
        "subtext_font_size_desktop": 1.6,
        "subtext_font_size_mobile": 1.0,
        "product_title_font_size_desktop": 1.0,
        "product_title_font_size_mobile": 0.9,
        "product_price_font_size_desktop": 1.0,
        "product_price_font_size_mobile": 0.9,
        "slides_per_view_mobile": 1,
        "slides_per_view_desktop": 3,
        "space_between_slides": 15,
        "space_between_slides_desktop": 20,
        "loop_slides": true,
        "show_swiper_pagination": true
      }
    }
  ]
}
{% endschema %}
