{% comment %}
  Shopify Product Page Liquid Template

  This template defines the structure of your product page.
  It includes schema settings for customization via the Shopify Theme Editor.
{% endcomment %}

{{ 'custom-product-page.css' | asset_url | stylesheet_tag }}
{{ 'swiper-bundle.min.css' | asset_url | stylesheet_tag }}

{%- assign current_variant = product.selected_or_first_available_variant -%}
{%- assign featured_image = current_variant.featured_image | default: product.featured_image -%}

{%- assign review_rating_value = product.metafields.reviews.rating.value.rating | default: 0 -%}
{%- assign review_count = product.metafields.reviews.rating_count | default: 0 -%}


<section
  class="product-page-section"
  data-section-id="{{ section.id }}"
  data-section-type="product-template"
  itemscope itemtype="http://schema.org/Product"
>
  <div
    class="product-hero"
    style="{% if section.settings.hero_background_image != blank %}background-image: url('{{ section.settings.hero_background_image | image_url: width: 1800 }}');{% endif %}"
  >
    <div class="product-hero__image-wrapper">
      {% if featured_image != blank %}
        <img
          src="{{ featured_image | image_url: width: 800 }}"
          alt="{{ featured_image.alt | escape }}"
          class="product-hero__image"
          itemprop="image"
        >
      {% else %}
        {{ 'product-1' | placeholder_svg_tag: 'placeholder-svg product-hero__image' }}
      {% endif %}
    </div>
  </div>

  <div class="product-details-wrapper">
    <div class="product-info-grid">

      {% comment %} Column 1: Reviews, Title, Price {% endcomment %}
      <div class="product-column product-column--details">
        {% if review_count > 0 %}
          <div class="product-reviews" itemprop="aggregateRating" itemscope itemtype="http://schema.org/AggregateRating">
            <span class="product-reviews__stars" aria-label="Rated {{ review_rating_value }} out of 5 stars">
              {%- for i in (1..5) -%}
                {%- if review_rating_value >= i -%}
                  <svg aria-hidden="true" focusable="false" role="presentation" class="icon icon-star" viewBox="0 0 20 20" width="16px" height="16px"><path fill="currentColor" d="M20 7.956l-6.527-.948L10.473 1 7.473 6.995.946 7.942l4.722 4.604L4.527 19 10 15.978 15.473 19l-1.142-6.438L20 7.956z"></path></svg>
                {%- else if review_rating_value > i-1 and review_rating_value < i -%}
                  <svg aria-hidden="true" focusable="false" role="presentation" class="icon icon-star-half" viewBox="0 0 20 20" width="16px" height="16px"><path fill="currentColor" d="M10 13.51V1l2.939 5.958L19.527 8l-4.788 4.667L15.883 19z"></path><path fill="currentColor" d="M10 13.51V1L2.939 5.958.473 8l4.788 4.667L4.117 19z" opacity=".5"></path></svg>
                {%- else -%}
                  <svg aria-hidden="true" focusable="false" role="presentation" class="icon icon-star-empty" viewBox="0 0 20 20" width="16px" height="16px"><path fill="currentColor" d="M20 7.956l-6.527-.948L10.473 1 7.473 6.995.946 7.942l4.722 4.604L4.527 19 10 15.978 15.473 19l-1.142-6.438L20 7.956zm-4.913 5.497L14.527 19 10 15.978l-4.527 3.009L4.33 13.438l-4.722-4.604.946-.137L3.527 8 1.054 7.942l4.722-4.604L4.527 19 10 15.978l5.473 3.022-1.142-6.438L20 7.956l-6.527-.948L10.473 1l-2.939 5.958L1 7.095l5.669.823L4.527 1 10 4.022 15.473 1l-1.142 6.438L20 7.956z" opacity=".5"></path></svg>
                {%- endif -%}
              {%- endfor -%}
            </span>
            <span class="product-reviews__count">{{ review_count }} {{ 'products.product.reviews.count_label' | t: count: review_count }}</span>
            <meta itemprop="ratingValue" content="{{ review_rating_value }}">
            <meta itemprop="reviewCount" content="{{ review_count }}">
          </div>
        {% endif %}

        <h1 class="product-title" itemprop="name">{{ product.title }}</h1>

        <div class="product-price" itemprop="offers" itemscope itemtype="http://schema.org/Offer">
          <span class="product-price__amount" itemprop="price" content="{{ current_variant.price | divided_by: 100.00 }}">
            {{ current_variant.price | money }}
          </span>
          {% if current_variant.price < current_variant.compare_at_price %}
            <s class="product-price__compare">
              {{ current_variant.compare_at_price | money }}
            </s>
          {% endif %}
          <meta itemprop="priceCurrency" content="{{ cart.currency.iso_code }}">
          <link itemprop="availability" href="http://schema.org/{% if current_variant.available %}InStock{% else %}OutOfStock{% endif %}">
          <p class="product-price__taxes-included">
            {%- assign taxes_included_text = 'products.product.price.taxes_included' | t -%}
            {%- if taxes_included_text contains 'Translation missing' or taxes_included_text == blank -%}
              Taxes included
            {%- else -%}
              {{ taxes_included_text }}
            {%- endif -%}
          </p>
        </div>
      </div>

      {% comment %} Column 2: Description {% endcomment %}
      <div class="product-column product-column--description-text">
        {% if product.description != blank %}
          <div class="product-description rte" itemprop="description">
            {{ product.description }}
          </div>
        {% endif %}
      </div>

      {% comment %} Column 3: Product Form (Quantity & Buttons) {% endcomment %}
      <div class="product-column product-column--form-actions">
        {% form 'product', product, class: 'product-form' %}
          <select name="id" id="ProductSelect-{{ section.id }}" class="product-form__variants--select-no-js no-js" style="display:none;">
            {% for variant in product.variants %}
              <option
                value="{{ variant.id }}"
                {% if variant == current_variant %}selected="selected"{% endif %}
              >
                {{ variant.title }}
              </option>
            {% endfor %}
          </select>

          <div class="product-form__controls">
            <div class="product-form__quantity quantity-selector">
              <button type="button" class="quantity-selector__button quantity-selector__button--minus" aria-label="{{ 'products.product.quantity.decrease' | t: product: product.title | escape }}">Ôºç</button>
              <input
                type="number"
                class="quantity-selector__input product-form__input--quantity"
                id="Quantity-{{ section.id }}"
                name="quantity"
                value="1"
                min="1"
                aria-label="{{ 'products.product.quantity.input_label' | t: product: product.title | escape }}"
                data-quantity-input
              >
              <button type="button" class="quantity-selector__button quantity-selector__button--plus" aria-label="{{ 'products.product.quantity.increase' | t: product: product.title | escape }}">+</button>
            </div>

            <button
              type="submit"
              name="add"
              class="product-form__add-to-cart button button--primary"
              {% unless current_variant.available %}disabled="disabled"{% endunless %}
            >
              <span class="product-form__add-to-cart-text">
                {% if current_variant.available %}
                  {{ 'products.product.add_to_cart' | t }}
                {% else %}
                  {{ 'products.product.sold_out' | t }}
                {% endif %}
              </span>
            </button>
          </div>
          {% if section.settings.show_dynamic_checkout %}
            <div class="shopify-payment-button-wrapper">
              {{ form | payment_button }}
            </div>
          {% endif %}
        {% endform %}
      </div>
    </div>
  </div>

  {% comment %} "You may also like" Section - SwiperJS Carousel {% endcomment %}
  {% if section.settings.show_related_products and section.settings.related_products_collection != blank %}
    {%- assign related_collection = collections[section.settings.related_products_collection] -%}
    {% if related_collection.products_count > 0 %}
      {% comment %} Removed .page-width from this div to allow full width background {% endcomment %}
      <div class="related-products-section">
        <div class="page-width"> {% comment %} Add .page-width here to constrain title and swiper container only {% endcomment %}
          <h2 class="related-products__title">
            {{ section.settings.related_products_heading | escape }}
          </h2>
          {% comment %} Swiper container {% endcomment %}
          <div class="swiper related-products-swiper" id="swiper-{{ section.id }}">
            <div class="swiper-wrapper">
              {% comment %} Slides {% endcomment %}
              {% for related_product in related_collection.products limit: section.settings.related_products_limit %}
                <div class="swiper-slide related-product-slide">
                  <div class="related-product-card">
                    <a href="{{ related_product.url | within: collection }}" class="related-product-card__link">
                      {% if related_product.featured_image %}
                        <img
                          src="{{ related_product.featured_image | image_url: width: 400 }}"
                          alt="{{ related_product.featured_image.alt | escape }}"
                          class="related-product-card__image"
                          loading="lazy"
                        >
                      {% else %}
                        {{ 'product-1' | placeholder_svg_tag: 'placeholder-svg related-product-card__image' }}
                      {% endif %}
                      <div class="related-product-card__info">
                        <p class="related-product-card__title">{{ related_product.title }}</p>
                        <p class="related-product-card__price">{{ related_product.price | money }}</p>
                      </div>
                    </a>
                  </div>
                </div>
              {% endfor %}
            </div>
            {% comment %} Pagination (Dynamic) {% endcomment %}
            <div class="swiper-pagination swiper-pagination-{{ section.id }}"></div>

            {% comment %} Navigation Buttons {% endcomment %}
            <div class="swiper-button-prev swiper-button-prev-{{ section.id }}"></div>
            <div class="swiper-button-next swiper-button-next-{{ section.id }}"></div>
          </div>
        </div>
      </div>
    {% endif %}
  {% endif %}
</section>

{{ 'swiper-bundle.min.js' | asset_url | script_tag }}
<script>
  // JavaScript for Quantity Selector
  document.addEventListener('DOMContentLoaded', function() {
    const quantitySelectors = document.querySelectorAll('.quantity-selector');
    quantitySelectors.forEach(selector => {
      const input = selector.querySelector('[data-quantity-input]');
      const minusButton = selector.querySelector('.quantity-selector__button--minus');
      const plusButton = selector.querySelector('.quantity-selector__button--plus');

      if (!input || !minusButton || !plusButton) {
        console.error('Quantity selector elements not found for one or more selectors.');
        return;
      }

      minusButton.addEventListener('click', () => {
        let currentValue = parseInt(input.value, 10);
        if (isNaN(currentValue)) currentValue = 1;
        if (currentValue > 1) {
          input.value = currentValue - 1;
          input.dispatchEvent(new Event('change', { bubbles: true }));
        }
      });

      plusButton.addEventListener('click', () => {
        let currentValue = parseInt(input.value, 10);
        if (isNaN(currentValue)) currentValue = 0;
        input.value = currentValue + 1;
        input.dispatchEvent(new Event('change', { bubbles: true }));
      });
    });

    // Initialize Swiper for "You may also like"
    const swiperContainer = document.getElementById('swiper-{{ section.id }}');
    if (swiperContainer) {
      const swiper = new Swiper(swiperContainer, {
        slidesPerView: 1,
        spaceBetween: 15,
        grabCursor: true,
        pagination: {
          el: '.swiper-pagination-{{ section.id }}',
          clickable: true,
          dynamicBullets: true, // UPDATED for dynamic pagination
        },
        navigation: {
          nextEl: '.swiper-button-next-{{ section.id }}',
          prevEl: '.swiper-button-prev-{{ section.id }}',
        },
        breakpoints: {
          768: {
            slidesPerView: 2,
            spaceBetween: 20
          },
          1024: {
            slidesPerView: {{ section.settings.related_products_to_show_at_once | default: 3 }},
            spaceBetween: 30
          }
        }
      });
    }
  });
</script>

{% schema %}
{
  "name": "Product Page",
  "settings": [
    {
      "type": "image_picker",
      "id": "hero_background_image",
      "label": "Hero Background Image",
      "info": "Background image for the top section."
    },
    {
      "type": "checkbox",
      "id": "show_dynamic_checkout",
      "label": "Show dynamic checkout button",
      "default": true,
      "info": "Lets customers check out directly using a familiar payment method. [Learn more](https://help.shopify.com/manual/online-store/dynamic-checkout)"
    },
    {
      "type": "header",
      "content": "Related Products"
    },
    {
      "type": "checkbox",
      "id": "show_related_products",
      "label": "Show 'You may also like' section",
      "default": true
    },
    {
      "type": "text",
      "id": "related_products_heading",
      "label": "Heading for 'You may also like'",
      "default": "You may also like"
    },
    {
      "type": "collection",
      "id": "related_products_collection",
      "label": "Collection for 'You may also like'"
    },
    {
      "type": "range",
      "id": "related_products_limit",
      "min": 3,
      "max": 12,
      "step": 1,
      "label": "Total number of products to load for carousel",
      "default": 8
    },
    {
      "type": "range",
      "id": "related_products_to_show_at_once",
      "min": 2,
      "max": 5,
      "step": 1,
      "label": "Number of products visible at once (Desktop)",
      "default": 3,
      "info": "This will be the 'slidesPerView' for desktop."
    }
  ]
}
{% endschema %}
